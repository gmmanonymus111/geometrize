stack: python 3.9

branches:
  only:
    - master

# Note that builds run in the order the images are declared
image:
  - Visual Studio 2019

# Define the build configurations
environment:
  GITHUB_API_KEY:
    secure: w1zaTUARBAuhkAKUke5sBvSkVtlDGL8YfQxROzv5oGIynVJImn+KWGFVDxyjQore

  matrix:
    - BUILD_NAME: msvc_windows
      QTDIR: C:\Qt\6.2\msvc2019_64

# Exclude invalid build configurations
matrix:
  exclude:

    - image: Visual Studio 2019
      BUILD_NAME: clang_osx
    - image: Visual Studio 2019
      BUILD_NAME: gcc_linux

configuration:
  - release

# Do configuration-specific build steps
for:

  # Windows MSVC
  - matrix:
      only:
        - image: Visual Studio 2019
          BUILD_NAME: msvc_windows

    install:
      - git submodule update --init --recursive
      - set PATH=%PATH%;%QTDIR%\bin
      - call "%QTDIR%\bin\qtenv2.bat"
      - call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
      - set make=nmake.exe

    before_build:
      # Debug prints
      - cd %QTDIR%
      - ls -a

      - cd %APPVEYOR_BUILD_FOLDER%
      - qmake geometrize.pro

    build_script:
      - cd %APPVEYOR_BUILD_FOLDER%
      - '%make%'
      
    after_build:
      - 7z a build.zip %APPVEYOR_BUILD_FOLDER%\release\*

    artifacts:
      - path: build.zip
        name: Build
